ext {

    compileSdk = 30
    minSdk = 21
    targetSdk = 30

    ktxVersion = "1.3.2"
    lifecycleKtxVersion = "2.3.0"
    lifecycleVersion = "2.2.0"
    glideVersion = "4.12.0"
    retrofitVersion = "2.9.0"
    rxJavaVersion = "3.0.0"
    daggerVersion = "2.34"
    roomVersion = "2.3.0-rc01"
    mockitoVersion = "3.9.0"
    androidTestVersion = "1.3.0"
    esspressoVersion = "3.3.0"

    ui = [
            appcompat           : 'androidx.appcompat:appcompat:1.1.0',
            material            : 'com.google.android.material:material:1.3.0',
            constraintLayout    : 'androidx.constraintlayout:constraintlayout:2.0.4',
            recyclerView        : 'androidx.recyclerview:recyclerview:1.1.0',
            lifecycleActivityKtx: "androidx.activity:activity-ktx:1.1.0",
            glide               : "com.github.bumptech.glide:glide:$glideVersion",
            glideCompiler       : "com.github.bumptech.glide:compiler:$glideVersion"
    ]

    domain = [
            kotlin                  : "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            ktxCore                 : "androidx.core:core-ktx:$ktxVersion",
            rxJava                  : "io.reactivex.rxjava3:rxjava:3.0.6",
            rxJavaAndroid           : "io.reactivex.rxjava3:rxandroid:$rxJavaVersion",
            rxJavaKotlin            : "io.reactivex.rxjava3:rxkotlin:$rxJavaVersion",
            lifecycleExtensions     : "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion",
            lifecycleViewModel      : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion",
            lifecycleReactivestreams: "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycleKtxVersion",
            dagger                  : "com.google.dagger:dagger:$daggerVersion",
            daggerCompiler          : "com.google.dagger:dagger-compiler:$daggerVersion",
            daggerAndroid           : "com.google.dagger:dagger-android:$daggerVersion",
            daggerSupport           : "com.google.dagger:dagger-android-support:$daggerVersion",
            daggerProcessor         : "com.google.dagger:dagger-android-processor:$daggerVersion",
            jodaTime                : "joda-time:joda-time:2.10.10",

    ]

    data = [
            room        : "androidx.room:room-runtime:$roomVersion",
            roomCompiler: "androidx.room:room-compiler:$roomVersion",
            roomRxJava  : "androidx.room:room-rxjava3:2.3.0-rc01",
            repo        : [
                    api : project(":repositories:api"),
                    impl: project(":repositories:impl")
            ]
    ]

    test = [
            junit                : 'junit:junit:4.13.2',
            mockito              : "org.mockito:mockito-core:$mockitoVersion",
            mockitoInline        : "org.mockito:mockito-inline:$mockitoVersion",
            mockitoKotlin        : "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0",
            androidJunit         : "androidx.test.ext:junit:1.1.2",
            androidEspresso      : "androidx.test.espresso:espresso-core:$esspressoVersion",
            androidEspressoIntent: "androidx.test.espresso:espresso-intents:$esspressoVersion",
            androidRunner        : "androidx.test:runner:$androidTestVersion",
            androidRules         : "androidx.test:rules:$androidTestVersion",
            uiautomator          : "com.android.support.test.uiautomator:uiautomator-v18:2.1.3",
            mokk                 : "io.mockk:mockk:1.11.0",
    ]

    feature = [
            makePhoto   : [
                    api : project(":feature_make_photo:api"),
                    impl: project(":feature_make_photo:impl")
            ],

            photoGallery: [
                    api : project(":feature_photo_gallery:api"),
                    impl: project(":feature_photo_gallery:impl")
            ],

            browsePhoto : [
                    api : project(":feature_browse_photo:api"),
                    impl: project(":feature_browse_photo:impl")
            ]
    ]

    core = [
            flow   : project(":core:flow"),
            ui     : project(":core:ui"),
            streams: project(":core:streams"),
            domain : project(":core:domain"),
            test   : project(":core:test"),
    ]
}